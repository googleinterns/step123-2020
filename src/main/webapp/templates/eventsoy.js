// This file was automatically generated by the Soy compiler.
// Please don't edit this file by hand.
// source: project/step123-2020/src/main/webapp/templates/eventsoy.soy

/**
 * @fileoverview Templates in namespace templates.eventsoy.
 * @public
 */

goog.provide('templates.eventsoy');

goog.requireType('goog.soy');
goog.require('soy');
goog.require('soy.asserts');
goog.require('soydata.VERY_UNSAFE');


/**
 * @param {templates.eventsoy.obtainUrl.Params} opt_data
 * @param {(?goog.soy.IjData|?Object<string, *>)=} opt_ijData
 * @param {(?goog.soy.IjData|?Object<string, *>)=} opt_ijData_deprecated
 * @return {!goog.soy.data.SanitizedHtml}
 * @suppress {checkTypes}
 */
templates.eventsoy.obtainUrl = function(opt_data, opt_ijData, opt_ijData_deprecated) {
  opt_ijData = /** @type {!goog.soy.IjData} */ (opt_ijData_deprecated || opt_ijData);
  /** @type {string} */
  var calendarId = soy.asserts.assertType(typeof opt_data.calendarId === 'string', 'calendarId', opt_data.calendarId, 'string');
  /** @type {string} */
  var timezone = soy.asserts.assertType(typeof opt_data.timezone === 'string', 'timezone', opt_data.timezone, 'string');
  return soydata.VERY_UNSAFE.ordainSanitizedHtml('https://calendar.google.com/calendar/embed?src=' + soy.$$escapeHtml(calendarId) + '&ctz=' + soy.$$escapeHtml(timezone));
};
/**
 * @typedef {{
 *  calendarId: string,
 *  timezone: string,
 * }}
 */
templates.eventsoy.obtainUrl.Params;
if (goog.DEBUG) {
  templates.eventsoy.obtainUrl.soyTemplateName = 'templates.eventsoy.obtainUrl';
}
